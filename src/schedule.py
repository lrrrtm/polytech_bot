import aiohttp
import ujson
from datetime import datetime
import logging


async def get_shedule(
    gid: str,
    is_teacher: bool = False,
    is_tomorrow: bool = False,
) -> None | str:
    if is_teacher:
        # –º–Ω–µ –ø–æ–∫–∞ —á—Ç–æ –ø–æ—Ö—É–π –Ω–∞ —É—á–∏—Ç–µ–ª–µ–π (–∏–∑–≤–∏–Ω–∏—Ç–µ) –µ—Å–ª–∏ —á—Ç–æ —Å–∞–º–∏ –¥–æ–±–∞–≤–∏—Ç–µ
        # schedule_url = "https://ruz.spbstu.ru/teachers/{gid}"
        return None
    else:
        schedule_url: str = f"https://ruz.spbstu.ru/api/v1/ruz/scheduler/{gid}"

    async with aiohttp.ClientSession() as session:
        async with session.get(schedule_url) as res:
            schedule_json = ujson.loads(await res.text())
            logging.debug(schedule_json)
            if not schedule_json["days"]:
                return "–†–∞–¥—É–π—Å—è –ø–æ–ª–∏—Ç–µ—Ö–Ω–∏–∫, –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é –∑–∞–Ω–∞—Ç–∏—è –Ω–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω—ã!"

            weekday = datetime.now().weekday()

            if is_tomorrow and not schedule_json["days"][weekday + 1]:
                return "–†–∞–¥—É–π—Å—è –ø–æ–ª–∏—Ç–µ—Ö–Ω–∏–∫, –∑–∞–≤—Ç—Ä–∞ —É —Ç–µ–±—è –Ω–µ—Ç –ø–∞—Ä!"

            try:
                schedule = "\n".join(
                    [
                        f"üî∏`{a['time_start']}-{a['time_end']}`\n"
                        f"üî∏_{a['subject']}_\n"
                        f"üî∏*{a['typeObj']['name']}*\n"
                        f"üî∏*{a['auditories'][0]['building']['name']}, –∞—É–¥. {a['auditories'][0]['name']}*\n"
                        f"üî∏*{'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ' if a['teachers'] == None else a['teachers'][0]['full_name']}*\n"
                        for a in schedule_json["days"][weekday + is_tomorrow]["lessons"]
                    ]
                )
                return schedule
            except TypeError or KeyError:
                return "–ò–∑–≤–∏–Ω–∏!!! –°–µ—Ä–≤–µ—Ä –ø–æ–ª–∏—Ç–µ—Ö–∞ –≤–µ—Ä–Ω—É–ª –∫–∞–∫—É—é —Ç–æ —Ö—É–π–Ω—é –≤–º–µ—Å—Ç–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∫–æ—Ç–æ—Ä—É—é —è –Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å!!!!(((((!"
